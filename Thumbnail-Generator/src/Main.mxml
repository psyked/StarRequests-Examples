<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/mx" showStatusBar="false">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import couk.markstar.starrequests.requests.IRequest;
			import couk.markstar.starrequests.utils.RequestQueueUtil;
			import couk.psyked.starrequests.requests.GenerateThumbnailBitmapDataRequest;
			import couk.psyked.starrequests.requests.vo.GenerateThumbnailBitmapDataRequestVO;
			import couk.psyked.utils.FileSizeFormatter;
			import couk.psyked.utils.NativeFileUtils;

			import mx.collections.ArrayCollection;

			override protected function childrenCreated():void
			{
				super.childrenCreated();

				browse_button.addEventListener( MouseEvent.CLICK, onLocationBrowse );

				if ( dataProvider )
				{
					dataProvider.removeAll();
					dataProvider = null;
				}
				dataProvider = new ArrayCollection();
				preview_list.dataProvider = dataProvider;
			}

			internal var fileLocation:File;

			protected function onLocationBrowse( e:Event ):void
			{
				fileLocation = new File();
				fileLocation.addEventListener( Event.SELECT, onLocationSelect );
				fileLocation.browseForDirectory( "Select a location..." );
			}

			protected function onLocationSelect( e:Event ):void
			{
				dataProvider.removeAll();
				totalProcessedFileSize = 0;
				totalSourceFileSize = 0;
				// clean up the stored reference to the File object used to select the location.
				fileLocation.removeEventListener( Event.SELECT, onLocationSelect );
				fileLocation = null;
				var selectedLocation:File = ( e.currentTarget as File );
				generateQueueForLocation( selectedLocation );
				path_label.text = "Location selected: " + selectedLocation.nativePath;
			}

			protected var dataProvider:ArrayCollection;

			protected var queue:RequestQueueUtil = new RequestQueueUtil();

			protected function generateQueueForLocation( fileLocation:File ):void
			{
				var allFiles:Array;

				if ( !browse_recursive.selected )
				{
					allFiles = fileLocation.getDirectoryListing();
				}
				else
				{
					allFiles = NativeFileUtils.getFilesRecursive( fileLocation.nativePath );
				}

				for each ( var f:File in allFiles )
				{
					var request:IRequest = new GenerateThumbnailBitmapDataRequest( f );
					request.completedSignal.add( completedListener );
					queue.addRequest( request );
				}
			}

			protected function completedListener( vo:GenerateThumbnailBitmapDataRequestVO ):void
			{
				if ( vo.thumbnailByteArray.length )
				{
					dataProvider.addItem( vo );
					totalProcessedFileSize += vo.thumbnailByteArray.length;
					totalSourceFileSize += vo.originalFile.size;
				}
				total_file_size.text = FileSizeFormatter.GetFileSize( totalSourceFileSize );
				total_reprocessed_size.text = FileSizeFormatter.GetFileSize( totalProcessedFileSize );
			}

			private var totalProcessedFileSize:Number;

			private var totalSourceFileSize:Number;
		]]>
	</fx:Script>
	<s:Button x="66" y="10" label="Browse..." id="browse_button" />
	<s:Label y="10" height="21" right="10" left="146" paddingTop="7" id="path_label" />
	<s:List left="9" right="9" top="66" bottom="9"
			itemRenderer="components.itemrenderers.ImageRenderer" id="preview_list">
	</s:List>
	<mx:Image x="10" y="10" source="assets/icons/icon_048.png" width="48" height="48" />
	<s:Label x="267" y="42" text="Total imported file size:" />
	<s:CheckBox x="66" y="37" label="Import images from subfolders" id="browse_recursive" />
	<s:Label x="395" y="42" text="Label" width="69" fontStyle="italic" id="total_file_size" />
	<s:Label x="478" y="42" text="Total reprocessed file size:" />
	<s:Label x="627" y="42" text="Label" width="69" fontStyle="italic" id="total_reprocessed_size" />
</s:WindowedApplication>
